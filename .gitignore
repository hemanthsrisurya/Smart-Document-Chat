# Smart Document Chat - Git Ignore File
# Optimized for GitHub upload

# Python
__pycache__/
*.py[cod]
*$py.class
*.so
*.egg-info/
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg
MANIFEST
pip-log.txt
pip-delete-this-directory.txt

# Virtual Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# IDE Files
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store
.DS_Store?
._*
Thumbs.db
ehthumbs.db

# Logs
logs/
*.log
!logs/.gitkeep

# Application Data (User Generated)
pdfFiles/
!pdfFiles/.gitkeep
vectorDB/
!vectorDB/.gitkeep

# Temporary Files
*.tmp
*.temp
.cache/
.pytest_cache/

# Docker
.dockerignore

# OS Files
.Spotlight-V100
.Trashes
*.swp
*.swo

# Development
.coverage
htmlcov/
.tox/
.mypy_cache/
.pytest_cache/
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to ignore the files corresponding to the IntelliJ Platform
#  and PyCharm plugins.
.idea/

# Visual Studio Code
.vscode/
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# macOS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
*.tmp
*.temp
*.swp
*.swo
*~

# Application-specific directories and files
# ===========================================

# PDF files (uploaded documents)
pdfFiles/
!pdfFiles/.gitkeep

# Vector database storage
vectorDB/
!vectorDB/.gitkeep

# Log files
logs/
*.log
!logs/.gitkeep

# Temporary files
temp/
tmp/

# Model files and caches
models/
.ollama/
.cache/

# Streamlit cache
.streamlit/

# ChromaDB specific
*.sqlite3
*.sqlite3-shm
*.sqlite3-wal

# Docker volumes (if mounted locally)
docker-volumes/

# Environment configuration files (if containing secrets)
.env.local
.env.production
.env.development
config.local.py

# Backup files
*.bak
*.backup
*.old

# System files
.fuse_hidden*
.directory
.Trash-*
.nfs*

# IDE and editor files
*.swp
*.swo
*~
.project
.metadata
bin/
tmp/
*.tmp
*.bak
*.swp
*~.nib
local.properties
.settings/
.loadpath
.recommenders

# External tool builders
.externalToolBuilders/

# Locally stored "Eclipse launch configurations"
*.launch

# PyDev specific (Python IDE for Eclipse)
*.pydevproject

# CDT-specific (C/C++ Development Tooling)
.cproject

# CDT- autotools
.autotools

# Java annotation processor (APT)
.factorypath

# PDT-specific (PHP Development Tools)
.buildpath

# sbteclipse plugin
.target

# Tern plugin
.tern-project

# TeXlipse plugin
.texlipse

# STS (Spring Tool Suite)
.springBeans

# Code Recommenders
.recommenders/

# Annotation Processing
.apt_generated/
.apt_generated_test/

# Scala IDE specific (Scala & Java development for Eclipse)
.cache-main
.scala_dependencies
.worksheet

# Uncomment this line if you wish to ignore the project description file.
# Typically, this file would be tracked if it contains build/dependency configurations:
#.project

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# MongoDB database files
*.db

# Sensitive files
secrets/
private/
.secrets/

# Docker build context exclusions (handled by .dockerignore)

# Test coverage
.coverage
htmlcov/

# Profiling
*.prof

# Application state files
state/
cache/

# Documentation build artifacts
docs/_build/
site/
